{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ICR/D,2EAAmC;IAAA,+FAAoC;IAAA,4DAAO;;ACA3E,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,MAAM,CAAC;QACf,kBAAa,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;QACrD,UAAK,GAAY,KAAK,CAAC;KAaxB;IAXC,WAAW;QACL,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK;IAC5B,CAAC;IAEH,SAAS,CAAC,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,MAAM,CAAC;QAC1D,MAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE;QAC7B,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;SAC7D;IACH,CAAC;;wEAfU,YAAY;4FAAZ,YAAY;QDPzB,uEAAM;QACJ,oEAAqD;QACrD,qEAAI;QAAA,4EAAiB;QAAA,uEAAM;QAAA,gEAAK;QAAA,4DAAO;QAAA,4DAAK;QAC5C,0EAAmB;QAAA,qFAA0B;QAAA,4DAAO;QACpD,yEAAkB;QAChB,yEAAoB;QACpB,uEAAyE;QACzE,4GAA8E;QAChF,4DAAM;QACJ,6EAAkE;QAA1D,qIAAS,iBAAa,IAAC;QAAmC,qEAAS;QAAA,4DAAS;QACtF,4DAAM;QAEN,qEAA0E;QAC1E,0EAA+C;QAA5B,wIAAS,qBAAiB,IAAC;QAE5C,mEAA2F;QAC3F,oEAA4F;QAC5F,oEAA0F;QAC5F,4DAAM;QACN,0EAAQ;QACN,wEAAM;QAAA,uGAA2C;QAAA,4DAAO;QAC1D,4DAAS;QACX,4DAAO;;QAhBI,2DAA8B;QAA9B,mFAA8B;QAC9B,0DAAW;QAAX,2EAAW;QAEc,0DAAiC;QAAjC,qFAAiC;QAMtD,0DAA2E;QAA3E,+HAA2E;QACzE,0DAA0E;QAA1E,8HAA0E;QAC5E,0DAA0E;QAA1E,8HAA0E;;;;;;;;;;;;;;AEhBzF;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;;AAYxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;;;;;;;;;;;;;;;;;;;ACV8B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<main>\n  <img class=\"logo\" alt=\"logo\" src=\"./assets/logo.svg\">\n  <h2>We are launching <span>soon!</span></h2>\n  <span class=\"mini\">Subscribe and get notified</span>\n  <div class=\"form\">\n    <div class=\"inputC\">\n    <input [class]=\"error ?'inputE' : ''\" placeholder=\"Your email address\" />\n    <span *ngIf=\"error\" class=\"errorS\">Please provide a valid email address</span>\n  </div>\n    <button (click)=\"toggleError()\" [class]=\"error ? 'errorBut' : ''\">Notify Me</button>\n  </div>\n  <!-- large image -->\n  <img alt=\"large\" src=\"./assets/illustration-dashboard.png\" class=\"large\"/>\n  <div class=\"icons\" (click)=\"iconClick($event)\">\n    <!-- buttons -->\n    <i id=\"fb\" [class]=\"'fab fa-facebook-f'.concat(activeButtons['fb'] ? ' activeI' : '')\"></i>\n    <i id=\"twit\" [class]=\"'fab fa-twitter'.concat(activeButtons['twit'] ? ' activeI' : '')\"></i>\n    <i id=\"ig\" [class]=\"'fab fa-instagram'.concat(activeButtons['ig'] ? ' activeI' : '')\"></i>\n  </div>\n  <footer>\n    <span>&copy; Copyright Ping. All rights reserved.</span>\n  </footer>\n</main>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'ping';\n  activeButtons = { fb: false, ig: false, twit: false }\n  error: Boolean = false;\n    \n  toggleError() {\n        this.error = !this.error\n    }\n\n  iconClick(ev) {\n    console.log('ev cur and tar', ev.currentTarget, ev.target)\n    const targetId = ev.target.id\n    if (targetId) {\n      this.activeButtons[targetId] = !this.activeButtons[targetId]\n    }\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}